<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[/** V E R A C I T Y ~ www.meetveracity.com ~ **
 * Author: Todd Fudala ~ tfudala@meetveracity.com

 * Description: Functions to manage OptumRx integrations for the ECM application

 */


// Enable the search button once there is something entered
$j(".form-control").on("keyup", function() {
    if ($j(this).val() != '') {
        $j('#search').removeClass('disabled');
    }
});

setDefaults();

// Set form value defaults
function setDefaults() {
    // Default effective date to today in the OptumRx ISO format
    var d = moment().format("YYYYMMDD");
    $j("#effectiveDate").val(d);
}



// Display messages for the user
function displayMessage(message) {
    $j("#display_message").text(message);
    console.log(message);
}

function onClear() {
    clearActiveTable();
}

function clearActiveTable() {
    var table = $j('.table-list:visible table').DataTable();
    var rows = table.clear().draw();
    $j('#clear').addClass('disabled');
}

function onCopy() {
    var table = $j('#claim_results').DataTable();
    var rows = table.rows('.selected');
    var row = rows.data()[0];
    console.log(row);
    displayMessage(rows.count() + " record(s) selected to copy.");
    postClaim();
}

function onMemberSearch() {
    $j('#claim_results_container').hide(); // Hide the claims results container
    $j('#search_results_container').show(); // Show the member results container


    displayMessage("Searching for member...");
    // Member Search Inputs based on REST Message
    var inputs = {
        "firstName": "",
        "lastName": "",
        "dateOfBirth": "",
        "memberId": "",
        "effectiveDate": "",
        "city": "",
        "state": ""
    };


    for (var i in inputs) {
        inputs[i] = document.getElementById(i).value;
        console.log(inputs[i]);

    }

    loading(true);
    memberSearch(inputs, g_form.getValue('number'), g_form.getUniqueValue());


}


// 298111932 - this SSN is for c360

function onClaimSearch(member_data) {

    $j('#search_results_container').hide(); // Hide the member results container
    $j('#claim_results_container').show(); // Show the claims results container
    displayMessage("Searching for claims...");
    // Claim Search Inputs based on REST Message
    var inputs = {
        "carrierId": member_data.carrierId,
        "accountId": member_data.accountId,
        "groupId": member_data.groupId,
        "memberId": member_data.memberId,
        "memberKey": member_data.memberKey,
        "rXClaimInstanceId": "SXCD1-QA", //member_data.instanceId,
        "fillDateFrom": moment().subtract(180, "days").format("YYYYMMDD"), // 180 days back
        "fillDateThru": moment().format("YYYYMMDD") // Today
    }

    loading(true);
    claimSearch(inputs, g_form.getValue('number'), g_form.getUniqueValue());

}

function onCancel() {
    loading(false);
}

function memberSearch(input_values, case_number, sys_id) {

    var ga = new GlideAjax('OptumRxAjax');
    ga.addParam('sysparm_name', 'memberSearch');
    ga.addParam('sysparm_first_name', input_values.firstName);
    ga.addParam('sysparm_last_name', input_values.lastName);
    ga.addParam('sysparm_dob', input_values.dateOfBirth);
    ga.addParam('sysparm_member_id', input_values.memberId);
    ga.addParam('sysparm_city', input_values.city);
    ga.addParam('sysparm_state', input_values.state);
    ga.addParam('sysparm_eff_date', input_values.effectiveDate);
    ga.addParam('sysparm_case_number', case_number);
    ga.addParam('sysparm_sys_id', sys_id);
    ga.getXML(parseMemberSearch);


}

function claimSearch(input_values, case_number, sys_id) {

    var ga = new GlideAjax('OptumRxAjax');
    ga.addParam('sysparm_name', 'claimSearch');
    ga.addParam('sysparm_carrier_id', input_values.carrierId);
    ga.addParam('sysparm_account_id', input_values.accountId);
    ga.addParam('sysparm_group_id', input_values.groupId);
    ga.addParam('sysparm_member_id', input_values.memberId);
    ga.addParam('sysparm_member_key', input_values.memberKey);
    ga.addParam('sysparm_claim_instance_id', input_values.rXClaimInstanceId);
    ga.addParam('sysparm_fill_date_from', input_values.fillDateFrom);
    ga.addParam('sysparm_fill_date_to', input_values.fillDateThru);
    ga.addParam('sysparm_case_number', case_number);
    ga.addParam('sysparm_sys_id', sys_id);
    ga.getXML(parseClaimSearch);
    //getJSON

}

function parseMemberSearch(response) {
    var answer = response.responseXML.documentElement.getAttribute("answer");
    //alert(answer);
    if (answer !== null && answer !== undefined) {
        var data_obj = JSON.parse(answer);
        var resp_code = data_obj.searchOutputMetaData.respCode;
        var resp_message = data_obj.searchOutputMetaData.respMessage[0];

        if (resp_code === "200") {
            bindMemberTable(data_obj);
        }
        displayMessage(resp_message);



    } else {
        displayMessage("The Ajax call failed, check the Integration Log for details.");
        console.log();

    }

    loading(false);

}

function parseClaimSearch(response) {
    var answer = response.responseXML.documentElement.getAttribute("answer");
    //alert(answer);
    if (answer !== null && answer !== undefined) {
        var data_obj = JSON.parse(answer);
        var resp_code = data_obj.searchOutputMetaData.respCode;
        var resp_message = data_obj.searchOutputMetaData.respMessage[0];

        if (resp_code === "200") {
            bindClaimTable(data_obj);
        } else {
            displayMessage(resp_message);
        }


    } else {
        displayMessage("The Ajax call failed, check the Integration Log for details.");
        console.log();

    }

    loading(false);

}

function bindMemberTable(data_object) {
    var bindData = data_object.response.memberSearchItems;
    var table = $j("#search_results").DataTable({
        "select": true,
        "select": {
            'style': 'single'
        },
        "retrieve": true,
        "searching": false,
        "paging": true,
        "pageLength": 5,
        "lengthMenu": [5, 10, 25, 50],
        "pagingType": "first_last_numbers",
        "dom": '<"top"i>rt<"bottom"flp><"clear">',
        "columns": [{

                title: "First Name",
                data: "firstName"
            },
            {
                title: "Last Name",
                data: "lastName"
            },
            {
                title: "DOB",
                data: "dateOfBirth"
            },
            {
                title: "Carrier ID",
                data: "carrierId"
            },
            {
                title: "Account ID",
                data: "accountId"
            },
            {
                title: "Group ID",
                data: "groupId"
            },
            {
                title: "Member ID",
                data: "memberId"
            },
            {
                title: "Phone",
                data: "phone"
            },
            {
                title: "Instance",
                data: "instanceId"
            }
        ]

    });

    table.on('select', function(e, dt, type, index) {
        if (type === 'row') {
            var member = table.row(index).data();
            displayMessage(member.firstName + ' ' + member.lastName + ' / ' + member.instanceId);
            onClaimSearch(member);

        }
    });

    table.clear().draw().rows.add(bindData).draw();

    // Allow table to be cleared
    $j('#clear').removeClass('disabled');

    displayMessage("Member results:");


}

function bindClaimTable(data_object) {
    var bindData = data_object.claimSearchResponse.claimSearchV2ServiceItem;
    // Array holding selected row IDs
    var rows_selected = [];

    var table = $j("#claim_results").DataTable({
        "retrieve": true,
        "searching": false,
        "paging": true,
        "pageLength": 5,
        "lengthMenu": [5, 10, 25, 50],
        "pagingType": "first_last_numbers",
        "dom": '<"top"i>rt<"bottom"flp><"clear">',
        'columnDefs': [{
            'targets': 0,
            'searchable': false,
            'orderable': false,
            'width': '1%',
            'className': 'dt-body-center',
            'render': function(data, type, full, meta) {
                return '<input type="checkbox">';
            }
        }],
        "columns": [{
                title: '<input name="select_all" value="1" type="checkbox">',
            },
            {
                title: "Member ID",
                data: "memberId"
            },
            {
                title: "Fill Date",
                data: "fillDate"
            },
            {
                title: "Product ID",
                data: "productId"
            },
            {
                title: "RX Number",
                data: "rxNumber"
            },
            {
                title: "Product",
                data: "productNameAbbreviation"
            },
            {
                title: "Supply",
                data: "daysSupply"
            },
            {
                title: "Status",
                data: "claimStatus"
            },
            {
                title: "Patient Amt.",
                data: "patientPayAmount"
            }
        ],
        'order': [1, 'asc'],
        'rowCallback': function(row, data, dataIndex) {
            // Get row ID
            var rowId = data[0];

            // If row ID is in the list of selected row IDs
            if ($j.inArray(rowId, rows_selected) !== -1) {
                $j(row).find('input[type="checkbox"]').prop('checked', true);
                $j(row).addClass('selected');
            }
        }

    });



    /* ---------------------Start Checkbox Handling------------------------------*/

    // Handle click on checkbox
    $j('#claim_results').on('click', 'input[type="checkbox"]', function(e) {
        var $row = $j(this).closest('tr');

        // Get row data
        var data = table.row($row).data();

        // Get row ID
        var rowId = data[0];

        // Determine whether row ID is in the list of selected row IDs
        var index = $j.inArray(rowId, rows_selected);

        // If checkbox is checked and row ID is not in list of selected row IDs
        if (this.checked && index === -1) {
            rows_selected.push(rowId);

            // Otherwise, if checkbox is not checked and row ID is in list of selected row IDs
        } else if (!this.checked && index !== -1) {
            rows_selected.splice(index, 1);
        }

        if (this.checked) {
            $row.addClass('selected');
        } else {
            $row.removeClass('selected');
        }

        // Update state of "Select all" control
        updateDataTableSelectAllCtrl(table);

        // Prevent click event from propagating to parent
        e.stopPropagation();


    });

    // Handle click on table cells with checkboxes
    $j('#claim_results').on('click', 'tbody td, thead th:first-child', function(e) {
        $j(this).parent().find('input[type="checkbox"]').trigger('click');
    });

    // Handle click on "Select all" control
    $j('thead input[name="select_all"]', table.table().container()).on('click', function(e) {
        if (this.checked) {
            $j('#claim_results input[type="checkbox"]:not(:checked)').trigger('click');
        } else {
            $j('#claim_results input[type="checkbox"]:checked').trigger('click');
        }

        // Prevent click event from propagating to parent
        e.stopPropagation();
    });

    // Handle table draw event
    table.on('draw', function() {
        // Update state of "Select all" control
        updateDataTableSelectAllCtrl(table);
    });

    table.clear().draw().rows.add(bindData).draw();

    displayMessage("Claims results:");

}

//
// Updates "Select all" control in a data table
//
function updateDataTableSelectAllCtrl(table) {
    var $table = table.table().node();
    var $chkbox_all = $j('tbody input[type="checkbox"]', $table);
    var $chkbox_checked = $j('tbody input[type="checkbox"]:checked', $table);
    var chkbox_select_all = $j('thead input[name="select_all"]', $table).get(0);


    // If none of the checkboxes are checked
    if ($chkbox_checked.length === 0) {
        chkbox_select_all.checked = false;
        if ('indeterminate' in chkbox_select_all) {
            chkbox_select_all.indeterminate = false;
        }
        enableCopy(false);

        // If all of the checkboxes are checked
    } else if ($chkbox_checked.length === $chkbox_all.length) {
        chkbox_select_all.checked = true;
        if ('indeterminate' in chkbox_select_all) {
            chkbox_select_all.indeterminate = false;
        }
        enableCopy(true);

        // If some of the checkboxes are checked
    } else {
        chkbox_select_all.checked = true;
        if ('indeterminate' in chkbox_select_all) {
            chkbox_select_all.indeterminate = true;
        }
        enableCopy(true);
    }
}

/* ---------------------End Checkbox Handling------------------------------*/

function formatISODate() {
    var d = new Date();
    //d.setDate(iso_date);
    return d.toISOString().replace(/-/g, "").slice(0, 8);
}

function loading(is_loading) {
    var loader = document.getElementById("loading");
    var loading_state = (is_loading) ? "text-center" : "text-center hidden";
    loader.className = loading_state;
}

function enableCopy(boolean_value) {
    if (boolean_value) {
        $j('#copy').removeClass('disabled');
    } else {
        $j('#copy').addClass('disabled');
    }
}

function postClaim() {

    var requestBody = "{\"carrier_id\":\"PROACT1\",\"account_id\":\"ABB\",\"member_id\":\"TESTMEM22333322333\",\"group_id\":\"8285A01\",\"claim_number\":\"171981435681000\",\"claim_status\":\"P\",\"fill_date\":\"20170717\",\"generic_product_id\":\"\",\"patient_pay_amount\":\"0.00\",\"plan_pay_amount\":\"2.09\",\"product_id\":\"31604002840\",\"product_name\":\"FISH OIL    CAP 183.33MG\",\"reject_code\":\"50\",\"reject_message\":\"Pharmacy not authorized to dispense\",\"parent\":\"4365c93f4fd60300699aacb14210c72a\"}";

    var client = new XMLHttpRequest();
    client.open("post", "https://optumbusopsdev.service-now.com/api/now/table/x_opt_ecm_claims?sysparm_fields=sys_id%2Csys_created_on");

    client.setRequestHeader('Accept', 'application/json');
    client.setRequestHeader('Content-Type', 'application/json');

    //Eg. UserName="admin", Password="admin" for this code sample.
    client.setRequestHeader('Authorization', 'Basic ' + window.btoa('admin' + ':' + 'admin'));

    client.onreadystatechange = function() {
        if (this.readyState == this.DONE) {
            //document.getElementById("response").innerHTML = this.status + this.response;
            displayMessage("REST POST sent successfully.");
        }
    };
    client.send(requestBody);

}
]]></client_script>
        <description>OptumRx Search</description>
        <direct>false</direct>
        <endpoint>x_opt_ecm_orx_search.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">

    <script src="x_opt_ecm.DataTables.1.10.16.jsdbx"></script>
    <script src="x_opt_ecm.moment.js.jsdbx"></script>
    <link rel="stylesheet" href="styles/heisenberg/heisenberg_all.css"></link>
    <link rel="stylesheet" href="styles/heisenberg/source_sans_pro.css"></link>
    <link rel="stylesheet" type="text/css" href="styles/dev-studio.css"></link>
    <link rel="stylesheet" type="text/css" href="styles/cn-icons/cn-icons.css"></link>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/dt-1.10.16/sl-1.2.3/datatables.min.css"></link>

    <div class="popup-body">
        <form name="search" class="form-horizontal">
            <fieldset>
                <div class="popup-content">
                    <div class="form-group">
                        <div class="popover-content">
                            <label class="col-sm-2 control-label">First Name</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="firstName" placeholder=""></input>
                            </div>
                            <label class="col-sm-2 control-label">Last Name</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="lastName" placeholder=""></input>
                            </div>

                        </div>

                        <div class="popover-content">
                            <label class="col-sm-2 control-label">Member DOB</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="dateOfBirth" placeholder="YYYYMMDD"></input>
                            </div>
                            <label class="col-sm-2 control-label">Member ID</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="memberId" placeholder="9 or 12 characters"></input>
                            </div>
                        </div>

                        <div class="popover-content">
                            <label class="col-sm-2 control-label">City</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="city" placeholder=""></input>
                            </div>
                            <label class="col-sm-2 control-label">State</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="state" placeholder="2 characters"></input>
                            </div>

                        </div>

                        <div class="popover-content">
                            <label class="col-sm-2 control-label">Effective Date</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="effectiveDate" placeholder="YYYYMMDD"></input>
                            </div>



                        </div>

                    </div>

                </div>
            </fieldset>
        </form>
    </div>




    <footer class="modal-footer">
        <a class="btn btn-default" onclick="onCancel()">Cancel</a>
        <button id="search" type="submit" class="btn btn-primary disabled" onclick="onMemberSearch()">Search</button>
        <button id="clear" type="submit" class="btn btn-primary disabled" onclick="onClear()">Clear</button>
        <button id="copy" type="submit" class="btn btn-success disabled" onclick="onCopy()">Copy</button>
    </footer>

    <hr></hr>
    <div>
        <h4 id="display_message"></h4>
    </div>

    <div id="loading" class="text-center hidden">
        <h4>Loading...</h4>
        <div class="loading-indicator icon-loading"></div>
    </div>

    <div id="search_results_container" class="table-list">
        <div class="table-container">
            <table id="search_results" class="table hover" style="cursor:pointer">
                <thead></thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <div id="claim_results_container" class="table-list">
        <div class="table-container">
            <table id="claim_results" class="table hover" style="cursor:pointer">
                <thead></thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

</j:jelly>
]]></html>
        <name>orx_search</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>todd.fudala</sys_created_by>
        <sys_created_on>2017-10-04 17:39:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>5aa4adaa4fad4f001e6cb4fe0210c7bc</sys_id>
        <sys_mod_count>541</sys_mod_count>
        <sys_name>orx_search</sys_name>
        <sys_package display_value="Escalated Complaint Management" source="x_opt_ecm">d1cfc3484f680b001e6cb4fe0210c7b7</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Escalated Complaint Management">d1cfc3484f680b001e6cb4fe0210c7b7</sys_scope>
        <sys_update_name>sys_ui_page_5aa4adaa4fad4f001e6cb4fe0210c7bc</sys_update_name>
        <sys_updated_by>todd.fudala</sys_updated_by>
        <sys_updated_on>2017-11-14 23:29:10</sys_updated_on>
    </sys_ui_page>
</record_update>
